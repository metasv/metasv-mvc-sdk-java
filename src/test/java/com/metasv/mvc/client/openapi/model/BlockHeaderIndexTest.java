/*
 * MetaSV for MVC API Spec
 * API definition for MetaSV provided apis
 *
 * The version of the OpenAPI document: 3.0.4
 * Contact: heqiming@metasv.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.metasv.mvc.client.openapi.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for BlockHeaderIndex
 */
public class BlockHeaderIndexTest {
    private final BlockHeaderIndex model = new BlockHeaderIndex();

    /**
     * Model tests for BlockHeaderIndex
     */
    @Test
    public void testBlockHeaderIndex() {
        // TODO: test BlockHeaderIndex
    }

    /**
     * Test the property 'blockHash'
     */
    @Test
    public void blockHashTest() {
        // TODO: test blockHash
    }

    /**
     * Test the property 'height'
     */
    @Test
    public void heightTest() {
        // TODO: test height
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'prevBlockHash'
     */
    @Test
    public void prevBlockHashTest() {
        // TODO: test prevBlockHash
    }

    /**
     * Test the property 'merkleRoot'
     */
    @Test
    public void merkleRootTest() {
        // TODO: test merkleRoot
    }

    /**
     * Test the property 'timestamp'
     */
    @Test
    public void timestampTest() {
        // TODO: test timestamp
    }

    /**
     * Test the property 'medianTime'
     */
    @Test
    public void medianTimeTest() {
        // TODO: test medianTime
    }

    /**
     * Test the property 'reward'
     */
    @Test
    public void rewardTest() {
        // TODO: test reward
    }

    /**
     * Test the property 'miner'
     */
    @Test
    public void minerTest() {
        // TODO: test miner
    }

    /**
     * Test the property 'minerAddress'
     */
    @Test
    public void minerAddressTest() {
        // TODO: test minerAddress
    }

    /**
     * Test the property 'txCount'
     */
    @Test
    public void txCountTest() {
        // TODO: test txCount
    }

    /**
     * Test the property 'inputCount'
     */
    @Test
    public void inputCountTest() {
        // TODO: test inputCount
    }

    /**
     * Test the property 'outputCount'
     */
    @Test
    public void outputCountTest() {
        // TODO: test outputCount
    }

    /**
     * Test the property 'size'
     */
    @Test
    public void sizeTest() {
        // TODO: test size
    }

    /**
     * Test the property 'bits'
     */
    @Test
    public void bitsTest() {
        // TODO: test bits
    }

    /**
     * Test the property 'nonce'
     */
    @Test
    public void nonceTest() {
        // TODO: test nonce
    }

    /**
     * Test the property 'coinbase'
     */
    @Test
    public void coinbaseTest() {
        // TODO: test coinbase
    }

}
