/*
 * MetaSV API Spec
 * API definition for MetaSV provided apis
 *
 * The version of the OpenAPI document: 2.2.0
 * Contact: heqiming@metasv.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.metasv.mvc.client.openapi.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ContractNftAuctionUtxo
 */
public class ContractNftAuctionUtxoTest {
    private final ContractNftAuctionUtxo model = new ContractNftAuctionUtxo();

    /**
     * Model tests for ContractNftAuctionUtxo
     */
    @Test
    public void testContractNftAuctionUtxo() {
        // TODO: test ContractNftAuctionUtxo
    }

    /**
     * Test the property 'address'
     */
    @Test
    public void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'txid'
     */
    @Test
    public void txidTest() {
        // TODO: test txid
    }

    /**
     * Test the property 'txIndex'
     */
    @Test
    public void txIndexTest() {
        // TODO: test txIndex
    }

    /**
     * Test the property 'bidMvcPrice'
     */
    @Test
    public void bidMvcPriceTest() {
        // TODO: test bidMvcPrice
    }

    /**
     * Test the property 'bidTimestamp'
     */
    @Test
    public void bidTimestampTest() {
        // TODO: test bidTimestamp
    }

    /**
     * Test the property 'bidderAddressPkh'
     */
    @Test
    public void bidderAddressPkhTest() {
        // TODO: test bidderAddressPkh
    }

    /**
     * Test the property 'codeHash'
     */
    @Test
    public void codeHashTest() {
        // TODO: test codeHash
    }

    /**
     * Test the property 'genesis'
     */
    @Test
    public void genesisTest() {
        // TODO: test genesis
    }

    /**
     * Test the property 'endTimestamp'
     */
    @Test
    public void endTimestampTest() {
        // TODO: test endTimestamp
    }

    /**
     * Test the property 'feeAddressPkh'
     */
    @Test
    public void feeAddressPkhTest() {
        // TODO: test feeAddressPkh
    }

    /**
     * Test the property 'feeAmount'
     */
    @Test
    public void feeAmountTest() {
        // TODO: test feeAmount
    }

    /**
     * Test the property 'feeRate'
     */
    @Test
    public void feeRateTest() {
        // TODO: test feeRate
    }

    /**
     * Test the property 'height'
     */
    @Test
    public void heightTest() {
        // TODO: test height
    }

    /**
     * Test the property 'nftCodeHash'
     */
    @Test
    public void nftCodeHashTest() {
        // TODO: test nftCodeHash
    }

    /**
     * Test the property 'nftId'
     */
    @Test
    public void nftIdTest() {
        // TODO: test nftId
    }

    /**
     * Test the property 'senderAddressPkh'
     */
    @Test
    public void senderAddressPkhTest() {
        // TODO: test senderAddressPkh
    }

    /**
     * Test the property 'sensibleId'
     */
    @Test
    public void sensibleIdTest() {
        // TODO: test sensibleId
    }

    /**
     * Test the property 'startMvcPrice'
     */
    @Test
    public void startMvcPriceTest() {
        // TODO: test startMvcPrice
    }

    /**
     * Test the property 'satoshi'
     */
    @Test
    public void satoshiTest() {
        // TODO: test satoshi
    }

    /**
     * Test the property 'satoshiString'
     */
    @Test
    public void satoshiStringTest() {
        // TODO: test satoshiString
    }

    /**
     * Test the property 'contractAddress'
     */
    @Test
    public void contractAddressTest() {
        // TODO: test contractAddress
    }

    /**
     * Test the property 'isReady'
     */
    @Test
    public void isReadyTest() {
        // TODO: test isReady
    }

    /**
     * Test the property 'flag'
     */
    @Test
    public void flagTest() {
        // TODO: test flag
    }

}
